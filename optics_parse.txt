This document is to provide instructions on how find the proper commands to run to collect outputs, and how to parse the outputs.

Optics controller outputs are collected for two types of commands:
1. show controller optics 0/0/0/x
2. show controller CoherentDSP 0/0/0/x
x is a numerical number (0 to N) and can vary from system to system. You will need to collect output for all instances of x.

Run the above two commands iteratively for all instances of x and collect the outputs.

Once outputs are collected, use the following instructions to parse and extract information.

It is important to understand the hierarchy so that proper information is associated with the right hierarchy level. A general hierarchy is like this:
All of the outputs are always associated with a node, which is identified by a node name. Under a node, there may be one or more command line outputs. Each command line output is consisted of a command line followed immediately by its output block. One or more commands may be captured per node. An output block may consist of one or more levels of subblocks.

A general format of a command line is: hardware location:node name#command
anything before the command is also called prompt.

An example of a command line:
RP/0/RP0/CPU0:ron-8201-1#show controllers optics 0/0/0/20

where 
RP/0/RP0/CPU0 is the hardware location, ron-8201-1 is the node name. node name will change depending on which node the output is collected on, 
'show controllers optics 0/0/0/20' is the command, starting with a command verb (show), a resource type (controllers), a resource subtype (optics), and a resource id (0/0/0/20)

An output block begins with the command (after a prompt) and ends with another prompt (with or without command) or end of file.
Associate the entire block with the command.

The output block is structured data that may consist one or more sub-blocks.

In general, command output is a set of key:value pairs. Key is the attribute, value is the value of the attribute. A subblock is encountered when a different format is used:
1) a section with a title, followed indended block, which may have one or more levels of subblocks
2) a key: with the value expanded into one or more key = value pairs. Note the equal sign here.

Here is an example of the output block with a sub-block, where BER Thresholds has a subblock:
Derived State : In Service
Loopback mode : None
BER Thresholds : SF = 1.0E-5 SD = 1.0E-7
Performance Monitoring : Enable

Here is a more complex example with a subblock using the section (Optics Status):
Optics Status

         Optics Type:  QSFPDD 400G ZR
         DWDM carrier Info: C BAND, MSA ITU Channel=61, Frequency=193.10THz,
         Wavelength=1552.524nm

Here is an example of using a table, THRESHOLD VALUES is the table title, organized into parameter with key and value in other columns:
         THRESHOLD VALUES
         ----------------

         Parameter                 High Alarm  Low Alarm  High Warning  Low Warning
         ------------------------  ----------  ---------  ------------  -----------
         Rx Power Threshold(dBm)         13.0      -23.0          10.0        -21.0
         Rx Power Threshold(mW)          19.9        0.0          10.0          0.0
         Tx Power Threshold(dBm)          0.0      -18.0          -2.0        -16.0
         Tx Power Threshold(mW)           1.0        0.0           0.6          0.0
         LBC Threshold(mA)               0.00       0.00          0.00         0.00
         Temp. Threshold(celsius)       80.00      -5.00         75.00        15.00
         Voltage Threshold(volt)         3.46       3.13          3.43         3.16
	



